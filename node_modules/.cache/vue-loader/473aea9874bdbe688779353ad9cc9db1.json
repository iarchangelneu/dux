{"remainingRequest":"C:\\Users\\NAREK\\Desktop\\duxWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\NAREK\\Desktop\\duxWeb\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"C:\\Users\\NAREK\\Desktop\\duxWeb\\src\\views\\Home.vue","mtime":1658269507640},{"path":"C:\\Users\\NAREK\\Desktop\\duxWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658053805099},{"path":"C:\\Users\\NAREK\\Desktop\\duxWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1658053810896},{"path":"C:\\Users\\NAREK\\Desktop\\duxWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658053805099},{"path":"C:\\Users\\NAREK\\Desktop\\duxWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":1658053810895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}